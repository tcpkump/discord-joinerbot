name: Build and Publish Docker Image

on:
  push:
    branches:
      - main
      - dev

env:
  DOCKER_REGISTRY: git.imkumpy.in 
  REPOSITORY: kumpy/discord-joinerbot

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Gitea Docker registry
      - name: Log in to Docker Registry
        run: echo "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" | docker login ${{ env.DOCKER_REGISTRY }} -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password-stdin

      - name: Set Image Tag
        id: tag
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "dev" ]]; then
            echo "tag=dev" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      # Step 4: Build and tag the Docker image
      - name: Build Docker Image
        run: |
          IMAGE_NAME="${{ env.DOCKER_REGISTRY }}/${{ env.REPOSITORY }}"
          docker build \
            --cache-from $IMAGE_NAME:latest \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            -t $IMAGE_NAME:${{ steps.tag.outputs.tag }} .

      # Step 5: Push the Docker image to the registry
      - name: Push Docker Image
        run: |
          IMAGE_NAME="${{ env.DOCKER_REGISTRY }}/${{ env.REPOSITORY }}"
          docker push $IMAGE_NAME:${{ steps.tag.outputs.tag }}


